{% extends 'auth.html.twig' %}

{% block title %}Regras{% endblock %}

{% block body %}

<div>
   <a href="/rules"
    class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">
        Voltar
    </a>

</div>
<div class="space-y-6">
    <div class="divide-y divide-gray-200 overflow-hidden rounded-lg border border-gray-200 bg-white shadow-sm dark:divide-gray-700 dark:border-gray-700 dark:bg-gray-800">
        <div class="flex items-center gap-8 p-6 sm:items-start lg:items-center">
             <form action="{{ path('app_transactions.create') }}" method="post">

                {% for message in app.flashes('error') %}
                    <div class="bg-red-100 text-red-700 p-3 rounded-lg mb-4">
                        {{ message }}
                    </div>
                {% endfor %}
                {% for message in app.flashes('success') %}
                    <div class="bg-green-100 text-green-700 p-3 rounded-lg mb-4">
                        {{ message }}
                    </div>
                {% endfor %}
                <div class="grid gap-4 mb-6 grip-cols-1 md:grid-cols-2">
                    <div>
                        <label for="amount" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Valor</label>
                        <input type="text" id="amount" name="amount" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        required />
                    </div>
                    <div>
                        <label for="user_phone" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Telefone do Cliente</label>
                        <input type="text" id="user_phone" name="user_phone"
                               class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                               placeholder="Digite o telefone do cliente"
                               required />
                        <small id="user_feedback" class="text-red-500 hidden">Usuário não encontrado.</small>
                    </div>

                    <input type="hidden" id="user_id" name="user_id">
                    <div>
                        <label for="order_number" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">N. Pedido</label>
                        <input type="text" id="order_number" name="order_number" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        required />
                    </div>
                </div>
                <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Salvar</button>
            </form>
        </div>
    </div>
</div>

<script>
document.getElementById('user_phone').addEventListener('blur', function() {
    let phone = this.value.trim();
    let feedback = document.getElementById('user_feedback');
    let userIdField = document.getElementById('user_id');

    if (phone.length < 10) {
        feedback.textContent = "Número de telefone inválido.";
        feedback.classList.remove('hidden');
        userIdField.value = '';
        return;
    }

    fetch('/search-user-by-phone/' + encodeURIComponent(phone))
        .then(response => response.json())
        .then(data => {
            if (data.id) {
                userIdField.value = data.id;
                feedback.classList.add('hidden');
            } else {
                feedback.textContent = "Usuário não encontrado.";
                feedback.classList.remove('hidden');
                userIdField.value = '';
            }
        })
        .catch(error => {
            feedback.textContent = "Erro ao buscar usuário.";
            feedback.classList.remove('hidden');
            userIdField.value = '';
            console.error('Erro:', error);
        });
});
</script>
{% endblock %}
